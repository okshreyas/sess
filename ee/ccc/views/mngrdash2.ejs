<!DOCTYPE html>
<html lang="en">
  <head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="icon" href="g360.png" type="image/png">
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Responsive Dashboard</title>

    <!-- ======= Styles ====== -->

    <style>
      /* =========== Google Fonts ============ */
      @import url("https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap");

      /* =============== Globals ============== */
      * {
        font-family: "Ubuntu", sans-serif;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      :root {
        --blue: #2a2185;
        --white: #fff;
        --gray: #f5f5f5;
        --black1: #222;
        --black2: #999;
      }

      .countdown {
        text-align: center;
        background-color: #050036;
        border: 1px solid #ccc;
        border-radius: 15px;
        padding: 20px;
        max-width: 500px;
        height: 200px;
        box-shadow: 0 0 15px #d6d5d5;
        color: #ffffff;
        border: 5px solid #ff8e04;
       width: 300px;
      }

      /* Style for the button */
      h1 {
        font-size: 24px;
      }

      #timer {
        margin-top: 20px;
        text-align: center;
        font-size: 30px;
        border: 2px solid #ffffff;
        border-radius: 0px;
        color: #ffffff;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        font-weight: 600;
        padding: 10px;
        font-weight: 200px;
      }

      .countdown:hover {
        transition: 0.2s ease-in;
        background-color: #04002c;
        transform: scale(1.05) skew(1deg, 1deg);

        .not-started {
          color: #000000;
          background-color: #a2a2a2;
          transition: 0.2s;
        }
        .completed {
          color: #000000;
          background-color: #e21300;
          transition: 0.2s;
        }
        .in-progress {
          color: #000000;
          background-color: #1795ce;
          transition: 0.2s;
        }
      }

      .completed {
        text-align: center;
        color: rgb(255, 255, 255);
        background-color: #570000;
        border: 2px solid #1b1b1b;
        border-radius: 5px;
      }

      .not-started {
        text-align: center;
        color: rgb(0, 0, 0);
        background-color: #dedede;
        border: 2px solid #1b1b1b;
        border-radius: 5px;
        text-transform: uppercase;
      }

      body {
        min-height: 100vh;
        overflow-x: hidden;
        background: var(--gray);
      }

      .container {
        position: relative;
        width: 100%;
      }

      /* =============== Navigation ================ */
      .navigation {
        position: fixed;
        width: 300px;
        height: 100%;
        background: var(--blue);
        border-left: 10px solid var(--blue);
        transition: 0.5s;
        overflow: hidden;
      }
      .navigation.active {
        width: 80px;
      }

      .navigation ul {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
      }

      .navigation ul li {
        position: relative;
        width: 100%;
        list-style: none;
        border-top-left-radius: 30px;
        border-bottom-left-radius: 30px;
      }

      .navigation ul li:hover,
      .navigation ul li.hovered {
        background-color: var(--white);
      }

      .navigation ul li:nth-child(1) {
        margin-bottom: 40px;
        pointer-events: none;
      }

      .navigation ul li a {
        position: relative;
        display: block;
        width: 100%;
        display: flex;
        text-decoration: none;
        color: var(--white);
      }
      .navigation ul li:hover a,
      .navigation ul li.hovered a {
        color: var(--blue);
        transition: 0.5s;
      }

      .navigation ul li a .icon {
        position: relative;
        display: block;
        min-width: 60px;
        height: 60px;
        line-height: 75px;
        text-align: center;
      }
      .navigation ul li a .icon ion-icon {
        font-size: 1.75rem;
      }

      .navigation ul li a .title {
        position: relative;
        display: block;
        padding: 0 10px;
        height: 60px;
        line-height: 60px;
        text-align: start;
        white-space: nowrap;
      }

      /* --------- curve outside ---------- */
      .navigation ul li:hover a::before,
      .navigation ul li.hovered a::before {
        content: "";
        position: absolute;
        right: 0;
        top: -50px;
        width: 50px;
        height: 50px;
        background-color: transparent;
        border-radius: 50%;
        box-shadow: 35px 35px 0 10px var(--white);
        pointer-events: none;
        transition: 0.5s;
      }
      .navigation ul li:hover a::after,
      .navigation ul li.hovered a::after {
        content: "";
        position: absolute;
        right: 0;
        bottom: -50px;
        width: 50px;
        height: 50px;
        background-color: transparent;
        border-radius: 50%;
        box-shadow: 35px -35px 0 10px var(--white);
        pointer-events: none;
        transition: 0.5s;
      }

      /* ===================== Main ===================== */
      .main {
        position: absolute;
        width: calc(100% - 300px);
        left: 300px;
        min-height: 100vh;
        background: var(--gray);
        transition: 0.5s;
      }
      .main.active {
        width: calc(100% - 80px);
        left: 80px;
      }

      .topbar {
        width: 100%;
        height: 60px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 10px;
      }

      .toggle {
        position: relative;
        width: 60px;
        height: 60px;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 2.5rem;
        cursor: pointer;
      }

      .search {
        position: relative;
        width: 400px;
        margin: 0 10px;
      }

      .search label {
        position: relative;
        width: 100%;
      }

      .search label input {
        width: 100%;
        height: 40px;
        border-radius: 40px;
        padding: 5px 20px;
        padding-left: 35px;
        font-size: 18px;
        outline: none;
        border: 1px solid var(--black2);
      }

      .search label ion-icon {
        position: absolute;
        top: 0;
        left: 10px;
        font-size: 1.2rem;
      }

      .user {
        position: relative;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        overflow: hidden;
        cursor: pointer;
      }

      .user img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      /* ======================= Cards ====================== */
      .cardBox {
        position: relative;
        width: 100%;
        padding: 20px;
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        grid-gap: 20px;
        border-radius: 20px;
        
        
      }

      .cardBox .card {
        position: relative;
        background: var(--white);
        padding: 30px;
        border-radius: 20px;
        display: flex;
        justify-content: space-between;
        cursor: pointer;
        box-shadow: 0 7px 25px rgba(0, 0, 0, 0.08);
        border: 2px solid var(--blue);
      }

      .cardBox .card .numbers {
        position: relative;
        font-weight: 500;
        font-size: 2.5rem;
        color: var(--blue);
      }

      .cardBox .card .cardName {
        color: var(--black2);
        font-size: 1.1rem;
        margin-top: 5px;
      }

      .cardBox .card .iconBx {
        font-size: 3.5rem;
        color: var(--black2);
      }

      .cardBox .card:hover {
        background: var(--blue);
      }
      .cardBox .card:hover .numbers,
      .cardBox .card:hover .cardName,
      .cardBox .card:hover .iconBx {
        color: var(--white);
        transition: 0.5s;
      }

      
      /* ================== Charts JS ============== */
      .chartsBx {
        position: relative;
        width: 100%;
        padding: 20px;
        display: grid;
        grid-template-columns: 1fr 3fr;
        grid-gap: 30px;

      }

      .chartsBx .chart {
        position: relative;
        background: #fff;
        padding: 20px;
        width: 100%;
        box-shadow: 0 7px 25px rgba(0, 0, 0, 0.08);
        border-radius: 20px;
        border: 1px solid var(--blue);
      }

      /* ================== Order Details List ============== */
      .details {
        position: relative;
        width: 100%;
        padding: 20px;
        display: grid;
        grid-template-columns: 3fr 1fr;
        grid-gap: 30px;
        border-radius: 20px;
        border: 2px solid var(--blue);
        /* margin-top: 10px; */
        
      }

      .details2 {
        position: relative;
        width: 100%;
        padding: 20px;
        display: grid;
        grid-template-columns: 3fr 1fr;
        grid-gap: 30px;
        border-radius: 20px;
        border: 2px solid var(--blue);
        /* margin-top: 10px; */
        
      }

      .details .recentOrders {
        position: relative;
        display: grid;
        min-height: 500px;
        background: var(--white);
        padding: 20px;
        box-shadow: 0 7px 25px rgba(0, 0, 0, 0.08);
        border-radius: 20px;
        border: 2px solid var(--blue);
      }

      .details .cardHeader {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
      }
      .cardHeader h2 {
        font-weight: 600;
        color: var(--blue);
      }
      .cardHeader .btn {
        position: relative;
        padding: 5px 10px;
        background: var(--blue);
        text-decoration: none;
        color: var(--white);
        border-radius: 6px;
      }

      .details table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
        border-radius: 10px;
      }
      .details table thead td {
        font-weight: 600;
      }
      .details .recentOrders table tr {
        color: var(--black1);
        border-bottom: 3px solid rgba(54, 54, 54, 0.175);
        transition: color 0.2s, border 0.2s; /* Add transition properties */

        background-color: var(--gray);
      }

      .details .recentOrders table tr:last-child {
        border-bottom: none;
      }

      .details .recentOrders table tbody tr:hover {
        background: var(--blue);
        color: var(--white);
        transform: scale(1.05);
        border-radius: 10px;
      }

      .details .recentOrders table tr td {
        padding: 10px;
      }

      .details .recentOrders table tr td:last-child {
        text-align: end;
      }

      .details .recentOrders table tr td:nth-child(2) {
        text-align: end;
      }

      .details .recentOrders table tr td:nth-child(3) {
        text-align: center;
      }

      .status.delivered {
        padding: 2px 4px;
        background: #8de02c;
        color: var(--white);
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
      }
      .status.pending {
        padding: 2px 4px;
        background: #e9b10a;
        color: var(--white);
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
      }
      .status.return {
        padding: 2px 4px;
        background: #f00;
        color: var(--white);
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
      }
      .status.inProgress {
        padding: 2px 4px;
        background: #1795ce;
        color: var(--white);
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
      }
      
      button.cardName {
    color: #220092; /* White text color */
    border: 2px solid #220092; /* White border */
    padding: 10px 20px; /* Add padding to the button */
    cursor: pointer; /* Change cursor to a hand pointer on hover */
    border-radius: 15px;
    width: 300px;
    height: 200px;
    display: flex;
    cursor: pointer;
    text-align: center;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 40px;
    font-weight: 700;
    
    
    
}

/* Hover effect for the button */
button.cardName:hover {
    background-color: #3e3e3e; /* Darker blue on hover */
    color: rgb(250, 250, 250);
    .card:hover {
        background: #fcfcfc;
      }

      .cardBox .card:hover {
        background: var(--white);
      }
      .card{
        background-color: white;
      }
      .card:hover .numbers,
      .card:hover .cardName,
      .card:hover .iconBx {
        color: var(--white);
        transition: 0.5s;
      }

      transition: 0.2s;
}

/* Center the text in the button */
button.cardName {
    text-align: center;
}
.linechartt {
        font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
        position: relative;
        display: grid;
        padding: 20px;
        background: var(--white);
        box-shadow: 0 7px 25px rgba(175, 175, 175, 0.742);
        border-radius: 20px;
        border: 2px solid var(--blue);
        font: 14px sans-serif;
        display: inline-block;
            width: 95%;
            margin: 10px;
      }

      .circular-progress {
            position: relative;
            height: 250px;
            width: 250px;
            border-radius: 50%;
            background: conic-gradient(#25f909 3.6deg, #ededed 0deg);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .circular-progress::before {
            content: "";
            position: absolute;
            height: 210px;
            width: 210px;
            border-radius: 50%;
            background-color: #fff;
        }

        .progress-value {
            position: relative;
            font-size: 60px;
            font-weight: 600;
            color: #2c2c2c;
        }

        .text {
            font-size: 30px;
            font-weight: 500;
            color: #606060;
        }

        /* Add CSS transition for the background color */
        .circular-progress {
            transition: background 2s ease;
            
        }

        .circular-progress2 {
            position: relative;
            height: 250px;
            width: 250px;
            border-radius: 50%;
            background: conic-gradient(#25f909 3.6deg, #ededed 0deg);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .circular-progress2::before {
            content: "";
            position: absolute;
            height: 210px;
            width: 210px;
            border-radius: 50%;
            background-color: #fff;
        }

        .progress-value2 {
            position: relative;
            font-size: 60px;
            font-weight: 600;
            color: #2c2c2c;
        }

        .text2 {
            font-size: 30px;
            font-weight: 500;
            color: #606060;
        }

        /* Add CSS transition for the background color */
        .circular-progress2 {
            transition: background 2s ease;
            
        }

      /* ====================== Responsive Design ========================== */
      @media (max-width: 991px) {
        .chartsBx {
          grid-template-columns: 1fr;
          height: auto;
        }

        .navigation {
          left: -300px;
        }
        .navigation.active {
          width: 300px;
          left: 0;
        }
        .main {
          width: 100%;
          left: 0;
        }
        .main.active {
          left: 300px;
        }
        .cardBox {
          grid-template-columns: repeat(1, 1fr);
        }
      }

      @media (max-width: 768px) {
        .details {
          grid-template-columns: 1fr;
        }
        .recentOrders {
          overflow-x: auto;
        }
        .status.inProgress {
          white-space: nowrap;
        }
      }

      @media (max-width: 480px) {
        .cardBox {
          grid-template-columns: repeat(1, 1fr);
        }
        .cardHeader h2 {
          font-size: 20px;
        }
        .user {
          min-width: 40px;
        }
        .navigation {
          width: 100%;
          left: -100%;
          z-index: 1000;
        }
        .navigation.active {
          width: 100%;
          left: 0;
        }
        .toggle {
          z-index: 10001;
        }
        .main.active .toggle {
          color: #fff;
          position: fixed;
          right: 0;
          left: initial;
        }
      }

      



        
    </style>
  </head>

  <body>
    <div class="container">
      <div class="navigation">
        <ul>
          <li>
            <a href="#">
              <span class="icon">
                <ion-icon name="logo-infosys"></ion-icon>
              </span>
              <span class="title" style="font-size: 40px;
              font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">INFOSYS</span>
            </a>
          </li>

          <li>
            <a href="#">
              <span class="icon">
                <ion-icon name="home-outline"></ion-icon>
              </span>
              <span class="title">Dashboard</span>
            </a>
          </li>

          <li>
            <a href="#">
              <span class="icon">
                <ion-icon name="people-outline"></ion-icon>
              </span>
              <span class="title">Lead Name</span>
            </a>
          </li>

          <li>
            Leadlist
            <a href="">
              <span class="icon">
                <ion-icon name="people-outline"></ion-icon>
              </span>
              <span class="title">Lead List</span>
            </a>
          </li>
          
         
        </ul>
      </div>

      <!-- ========================= Main ==================== -->
      <div class="main">
        <div class="topbar">
          <div class="toggle">
            <ion-icon name="menu-outline"></ion-icon>
          </div>

          <div class="search">
            <label>
              <input type="text" placeholder="Search here" />
              <ion-icon name="search-outline"></ion-icon>
            </label>
          </div>

          <div class="user">
            <img src="PIX.jpg" alt="INFOSYS" />
          </div>
        </div>

        <!-- ======================= Cards ================== -->
        <div class="cardBox">
         

          <div class="cardName">
            <div>
              <button class="cardName" id="employeeLink">TEAM<br>STATUS</button>
            </div>
          </div>
         

          <div class="cardName">
            <div>
              <button class="cardName" id="employeeList">LEAD<br>INFO</button>
            </div>
          </div>

          

          <div>
            <div class="countdown">
              <h1>Monthly Event Countdown</h1>
              <div id="timer"></div>
            </div>
          </div>
        
        
        <!-- ================ Add Charts JS ================= -->
     
        <div>
          
            <div class="chart">
            <canvas id="lineChartnew"></canvas>
          </div> </div> </div>
        
        
        <!-- ================ Order Details List ================= -->
        
     

          <!-- ================= Corporate Interaction Data ================ -->
          <div class="cardBox">
            <h1 style="font-size: 20px;font-weight: 600;">LEAD <br> COMPLETION</h1>
              <div class="circular-progress">
                  <span class="progress-value">70%</span>
                  
              </div>  
              <h1 style="font-size: 20px;font-weight: 600;">EMPLOYEE COMPLTION</h1>
              <div class="circular-progress2">
                <span class="progress-value2">70%</span>
            </div>  
            
            </div>
    
       

        
          
   

    <!-- =========== Scripts =========  -->
    <script>
      // add hovered class to selected list item
      let list = document.querySelectorAll(".navigation li");

      function activeLink() {
        list.forEach((item) => {
          item.classList.remove("hovered");
        });
        this.classList.add("hovered");
      }

      list.forEach((item) => item.addEventListener("mouseover", activeLink));

      // Menu Toggle
      let toggle = document.querySelector(".toggle");
      let navigation = document.querySelector(".navigation");
      let main = document.querySelector(".main");

      toggle.onclick = function () {
        navigation.classList.toggle("active");
        main.classList.toggle("active");
      };

      document.addEventListener("DOMContentLoaded", function () {
        // Find the button by its ID
        const employeeLinkButton = document.getElementById("employeeLink");
        const employeeListButton = document.getElementById("employeeList");

        // Add a click event listener
        employeeLinkButton.addEventListener("click", function () {
          // Redirect to the "emp.ejs" page
          window.location.href = "round";
        });
        employeeListButton.addEventListener("click", function () {
          // Redirect to the "emp.ejs" page
          window.location.href = "emplist";
        });
      });
    
      function updateCountdown() {
        const now = new Date();
        const currentMonth = now.getMonth();

        // Check if the current date is between the 11th and 15th day of the month
        if (now.getDate() >= 27 && now.getDate() <= 50) {
          // 11th to 15th day of the month
          const targetDate = new Date(now.getFullYear(), currentMonth, 55); // 16th day of the current month
          const timeRemaining = targetDate - now;

          const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
          const hours = Math.floor(
            (timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
          );
          const minutes = Math.floor(
            (timeRemaining % (1000 * 60 * 60)) / (1000 * 60)
          );
          const seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);

          document.getElementById(
            "timer"
          ).innerHTML = `${days}d ${hours}h ${minutes}m ${seconds}s`;
          document
            .getElementById("timer")
            .classList.remove("completed", "not-started");
        } else if (now.getDate() < 1) {
          document.getElementById("timer").innerHTML = "Event not started";
          document.getElementById("timer").classList.add("not-started");
        } else {
          document.getElementById("timer").innerHTML = "Event ended";
          document.getElementById("timer").classList.add("completed");
        }
      }
      updateCountdown();
      setInterval(updateCountdown, 1000);
   


const labels = rawData.map(entry => entry.month);
const data = rawData.map(entry => entry.interaction_count);

const reversedLabels = labels.slice().reverse();
const reversedData = data.slice().reverse();

const chartData = {
    labels: reversedLabels,
    datasets: [
        {
            label: 'Interaction Count',
            data: reversedData,
            borderColor: 'rgba(75, 2, 192, 1)',
            borderWidth: 3,
            pointRadius: 5,
            pointBackgroundColor: 'rgba(75, 12, 192, 1)',
            fill: true,
            tension: 0.5,
            FontFace: 'bold',
            
        }
    ]
};

const options = {
    scales: {
        x: {
            title: {
                display: true,
                text: 'Month',
            },
        },
        y: {
            title: {
                display: true,
                text: 'Interaction Count',
                
            },
        },
    },
};

const ctx = document.getElementById('lineChartnew').getContext('2d');
const devicePixelRatio = window.devicePixelRatio || 1; // Get the device pixel ratio
ctx.canvas.width = 400 * devicePixelRatio; // Set canvas width with DPR
ctx.canvas.height = 200 * devicePixelRatio; // Set canvas height with DPR
ctx.canvas.style.width = "400px"; // Set canvas style width
ctx.canvas.style.height = "400px"; // Set canvas style height

new Chart(ctx, {
    type: 'line',
    data: chartData,
    options: options,
});

let circularprogress = document.querySelector(".circular-progress");
        let progressValue = document.querySelector(".progress-value");
        let circularprogress2 = document.querySelector(".circular-progress2");
        let progressValue2 = document.querySelector(".progress-value2");
        let circularprogress3 = document.querySelector(".circular-progress3");
        let progressValue3 = document.querySelector(".progress-value3");
        let progressStartValue = 0;
        let progressEndValue = 79;
        let progressStartValue2 = 0;
        let progressEndValue2 = 20;
        let progressStartValue3 = 0;
        let progressEndValue3 = 20;

        let speed = 10;

        let progress = setInterval(() => {
            progressStartValue++;

            progressValue.textContent = `${progressStartValue}%`;

            if (progressStartValue < 30) {
                circularprogress.style.background = `conic-gradient(#e82a2a ${progressStartValue * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            } else if (progressStartValue < 70) {
                circularprogress.style.background = `conic-gradient(#e8b12a ${progressStartValue * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            } else if (progressStartValue >= 70) {
                circularprogress.style.background = `conic-gradient(#18d000 ${progressStartValue * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            }

            if (progressStartValue == progressEndValue) {
                clearInterval(progress);
            }
        }, speed);

        let progress2 = setInterval(() => {
            progressStartValue2++;
            progressValue2.textContent = `${progressStartValue2}%`;

            if (progressStartValue2 < 30) {
                circularprogress2.style.background = `conic-gradient(#e82a2a ${progressStartValue2 * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            } else if (progressStartValue < 70) {
                circularprogress2.style.background = `conic-gradient(#e8b12a ${progressStartValue2 * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            } else if (progressStartValue >= 70) {
                circularprogress2.style.background = `conic-gradient(#18d000 ${progressStartValue2 * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            }

            if (progressStartValue2 == progressEndValue2) {
                clearInterval(progress2);
            }
        }, speed);

        let progress3 = setInterval(() => {
            progressStartValue++;
            progressValue3.textContent = `${progressStartValue3}%`;

            if (progressStartValue3 < 30) {
                circularprogress.style.background = `conic-gradient(#e82a2a ${progressStartValue3 * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            } else if (progressStartValue < 70) {
                circularprogress.style.background = `conic-gradient(#e8b12a ${progressStartValue3 * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            } else if (progressStartValue >= 70) {
                circularprogress.style.background = `conic-gradient(#18d000 ${progressStartValue3 * 3.6}deg, rgb(216, 216, 216) 0deg)`;
            }

            if (progressStartValue3 == progressEndValue3) {
                clearInterval(progress3);
            }
        }, speed);

  </script>
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  
  </body>
</html>

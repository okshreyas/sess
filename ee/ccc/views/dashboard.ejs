<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Business Quarter</title>
   <style>
        .headermain {
            align-items: center;
            background-color: #ffeba7;
            color: #000000;
            text-align: center;
            padding: 30px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 50px;
            font-weight: bold;
            border: 1px solid #353434;
            border-radius: 20px;
            box-shadow: 0 10px 10px rgba(201, 201, 201, 0.329);
            border-bottom: 5px solid #6b3636;
            border-right: 5px solid #353434;
        }

        .quarter {
           font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
           font-size: 20px;
              font-weight: bold;
                color: #003479;
        }

        .currentmonth {
           font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
           font-size: 20px;
              font-weight: bold;
              color: #ad0b0b;
              
        }
            .newdiv {
      display: flex;
      flex-direction: column;
      align-items: center;
        justify-content: center;
      border-radius: 15px;
      padding: 20px;
      width: auto;
     
    }

    h1 {
      font-size: 24px;
      margin-bottom: 20px;
    }

    .button-container {
      display: flex;
      align-items: center;
      height: 200px;
    }

    .buttoneffect {
      background-color: #20125e;
      color: #ffffff;
      border-radius: 10px;
      font-size: 25px;
      text-decoration: none;
      padding: 10px 20px;
      width: 300px;
      font-weight: bold;
      height: 100px;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      
    }

.buttoneffect:hover {
      background-color: #5eff01;
      color: #000000;
      transform: scale(1.05);
      height: 90px;
      transition: all 0.2s ease-in-out;
    }

    .buttoneffect2 {
      background-color: #20125e;
      color: #ffffff;
      border-radius: 10px;
      font-size: 25px;
      text-decoration: none;
      padding: 10px 20px;
      width: 300px;
      font-weight: bold;
      height: 100px;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    
    }

    .buttoneffect2:hover {
      background-color: #d10000;
      color: #ffffff;
      transform: scale(1.05);
      height: 90px;
      transition: all 0.2s ease-in-out;
    }

    .arrow {
      display: inline-block;
      width: 0;
      height: 0;
      border-top: 10px solid transparent;
      border-bottom: 10px solid transparent;
      border-left: 10px solid #000; /* Right-pointing arrow */
      margin: 0 10px;
    }


     .history {
      background-color: #3498db;
      color: #fff;
      border-radius: 10px;
      font-size: 25px;
      text-decoration: none;
      padding: 10px 20px;
      width: 300px;
      font-weight: bold;
      
    }

    .history:hover {
      background-color: #242c77;
      transform: scale(1.05);
      transition: all 0.2s ease-in-out;
      box-shadow: #000;
    }

    .ddmmmyyyy{
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-size: 20px;
        font-weight: bold;
        color: #ad0b0b;
        align-items: center;
        text-align: center;

    }

     

    </style>
</head>
<body>
    <div class="headermain">Employee 1-1 Evaluation <div id="currentmonth"></div>
    
    <div class="quarter" id="quarterInfo">Loading...</div>
    </div>
    <br>
    <div class="newdiv">
        <div class="ddmmmyyyy">
            <div id="ddmmmyyyy"></div>
            <hr>
        </div>
    <h1 style="align-items: center; font-weight: bold; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size: 40px;">1-1 Interaction Status</h1>
    <div class="button-container">
      <button class="buttoneffect" button id="btn1" class="btn1" name="interaction" onclick="handleResponse('yes')" value="yes" style="align-items: center;">Employee Details</button>
 <button id="openPageButton">Open Another Page</button>
      //redirect to employee details page
      
     &nbsp; &nbsp; <div class="arrow"></div> &nbsp; &nbsp;
      <button class="buttoneffect2" button id="btn2" class="btn2" name="interaction" onclick="handleResponse('no')" value="no">NOT Completed</button>
    </div>
</div>

    <script>

           document.getElementById('openPageButton').addEventListener('click', function() {
            // Redirect to another page when the button is clicked
            window.location.href = '/anotherpage';
        });
        const monthNames = [
            'January', 'February', 'March', 'April', 'May', 'June', 'July',
            'August', 'September', 'October', 'November', 'December'
        ];

        // Define the getdata function
        function getdata() {
            const currentDate = new Date();
            const currentMonth = currentDate.getMonth() + 1; // Adding 1 to get the current month
            const currentMonthName = monthNames[currentMonth - 1]; // Subtracting 1 to adjust for zero-based index
            const currentYear = currentDate.getFullYear();

            // Define the custom quarter structure
            const quarters = [
                'Q4 (January, February, March)',
                'Q1 (April, May, June)',
                'Q2 (July, August, September)',
                'Q3 (October, November, December)'
            ];

            const quarterIndex = Math.floor((currentMonth - 1) / 3);
            const quarterName = quarters[quarterIndex];

            let output = `${currentYear} ${quarterName}`;
            return output;
        }

        function getcurrentmonth() {
            const currentDate = new Date();
            const currentMonth = currentDate.getMonth() + 1; // Adding 1 to get the current month
            const currentMonthName = monthNames[currentMonth - 1]; // Subtracting 1 to adjust for zero-based index
            const currentYear = currentDate.getFullYear();
            const quarterStartMonth = Math.floor((currentMonth - 1) / 3) * 3 + 1;
            const quarterEndMonth = quarterStartMonth + 2;
            const quarterName = `(${monthNames[quarterStartMonth - 1]}, ${monthNames[quarterStartMonth]}, ${monthNames[quarterEndMonth - 1]})`;

            let output = ` ${currentMonthName} ${currentYear} `;
            return output;
        }

        function getddmmmyyyy() {
            const currentDate = new Date();
            const currentMonth = currentDate.getMonth() + 1; // Adding 1 to get the current month
            const currentMonthName = monthNames[currentMonth - 1]; // Subtracting 1 to adjust for zero-based index
            const currentYear = currentDate.getFullYear();
            const quarterStartMonth = Math.floor((currentMonth - 1) / 3) * 3 + 1;
            const quarterEndMonth = quarterStartMonth + 2;
            const quarterName = `(${monthNames[quarterStartMonth - 1]}, ${monthNames[quarterStartMonth]}, ${monthNames[quarterEndMonth - 1]})`;

            let output = `${currentDate} ${currentMonthName} ${currentYear} `;
            return output;
        }

        function handleResponse(response) {
            const currentDate = new Date();
            const currentMonth = currentDate.getMonth() + 1; // Adding 1 because months are zero-based
            const currentYear = currentDate.getFullYear();

            fetch('/onetwo', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    interaction: response,
                    interaction_month: currentMonth,
                    interaction_year: currentYear
                }),
            })
            .then((response) => {
                if (response.ok) {
                    window.location.href = '/info';
                } else {
                    // Handle errors if needed
                    console.error('Error:', response);
                }
            })
            .catch((error) => {
                console.error('Error:', error);
            });
        }

        // Get the quarter information and update the page
        const quarterInfo = getdata();
        document.getElementById('quarterInfo').textContent = quarterInfo;
        const currentmonth = getcurrentmonth();
        document.getElementById('currentmonth').textContent = currentmonth;
        const ddmmmyyyy = getddmmmyyyy();
        document.getElementById('ddmmmyyyy').textContent = ddmmmyyyy;

        document.getElementById('btn1').addEventListener('click', () => handleResponse('yes'));
        document.getElementById('btn2').addEventListener('click', () => handleResponse('no'));
    </script>
</body>
</html>

<%  function getBorderClass(interaction, leadinteraction) {	%>				
	<%    if (interaction === null && leadinteraction === null) {	%>
	<%      return 'red';%>
	<%    } else if (interaction === 'yes' && leadinteraction === 'yes') {%>
	<%      return 'green';%>
	<%    } else if (interaction === 'yes' && leadinteraction === 'yes') {%>
	<%      return 'green';%>
	<%    } else if (interaction === 'yes' && leadinteraction === 'no') {%>
	<%      return 'yellow';%>
	<%    } else if (interaction === 'no' && leadinteraction === 'yes') {%>
	<%      return 'yellow';%>
	<%    } else if (interaction === 'no' && leadinteraction === 'no') {%>
	<%      return 'red';%>
	<%    } else if ((interaction === 'no' || interaction === 'yes') && leadinteraction === null) {%>
	<%      return 'blue';%>
	<%    } else {%>
	<%      return 'black';%>
	<%    }	%>
	<%  }%>



<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- Boxicons -->
	<link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
	<link rel="stylesheet" href="styleforleaddashboard.css">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

	<title>Lead Interaction Dashboard</title>
</head>
<script>
    sessionStorage.setItem('userEmail', record.email);
</script>
<body>


	<!-- SIDEBAR -->
	<section id="sidebar">
		<a href="#" class="brand">
			<i class='bx bxs-smile'></i>
			<span class="text">Lead Interaction</span>
		</a>
		<ul class="side-menu top">
			<li>
				<button id="createButton2" class="button-9" role="button" >PROCEED TO 1-1</button>
			</li>
			<li>
				
				<button id="createButton" role="button"></button>

			</li>
			
		</ul>
		
	</section>
	<!-- SIDEBAR -->



	<!-- CONTENT -->
	<section id="content">
		<!-- NAVBAR -->
		<nav>
			<i class='bx bx-menu' ></i>
			<a href="#" class="nav-link">Categories</a>
			<form action="#">
				<div class="form-input">
					<input type="text" id="search-empid" placeholder="Search by empid">
					<button type="submit" class="search-btn"><i class='bx bx-search' ></i></button>
				</div>
			</form>
			<input type="checkbox" id="switch-mode" hidden>
			<label for="switch-mode" class="switch-mode"></label>
			<a href="#" class="notification">
				<i class='bx bxs-bell' ></i>
				
			</a>
			<a href="#" class="profile">
				<img src="people.png">
			</a>
		</nav>
		<!-- NAVBAR -->

		<!-- MAIN -->
		<main>
		
			<div id="data-container">
				
					<div class="record">

						<!-- Add more fields as needed -->
			<div class="head-title">
				<div class="left">
					<h1>Dashboard</h1>
					<ul class="breadcrumb">
						<li>
							<a href="#">Dashboard</a>
						</li>
						<li><i class='bx bx-chevron-right' ></i></li>
						<li>
							<a class="active" href="#">Home</a>
						</li>
					</ul>
				</div>
				<a href="#" class="btn-download" button onclick="window.location.href='login'" >
					<i class='bx bxs-cloud-download' button id="logout" ></i>

				
					<span class="text">LOG OUT</span>
					
						

				</a>
			</div>
		</div>

		
			<ul class="box-info">
				
				<li>
					<i class='bx bxs-calendar-check' ></i>
					<span class="text">
						<h3><p><%= employeeData[0].record_count %></p></h3>
						<p>Completed</p>
					</span>
				</li>
				<li>
					<i class='bx bxs-group' ></i>
					<span class="text">
						<h3><p><%= (data.length - employeeData[0].record_count) %></p></h3>
						<p>Pending</p>
					</span>
				</li>
				<li>
					<i class='bx bxs-dollar-circle' ></i>
					<span class="text">
						<h3><p><%= data.length %></p></h3>
						<p>Total </p>
					</span>
				</li>

				
			</ul>
		
			


			<div class="table-data">
				<div class="order">
					<div class="head">
						<h3>EMPLOYEE LIST</h3>
						<i class='bx bx-search' ></i>
						<i class='bx bx-filter' ></i>
					</div>
					<table>
						<thead>
						    <tr>
							   <th>ID</th>
							   <th>Name</th>
							   <th>Email</th>
							   <th>Int_Time</th>
							   <th>Int_Date</th>
						    </tr>
						</thead>
						<tbody>
						    <!-- Replace with actual employee data -->
						    <% data.forEach(row => { %>
							   <tr>   
								  <td><%= row.id %></td>
								<td><%= row.firstname %><%= row.lastname %></td>
								  <td><%= row.email %></td>
								  <td><%= row.interaction_time %></td>
								  <td><%= row.interaction_date %></td>
							   </tr>
						    <% }); %>
						</tbody>
					 </table>
				</div>
				<!-- guage like speedometer -->
				<div class="gauge-wrapper">
					<div class="gauge-outer" id="gauge1" data-min="0" data-max="100" data-value="<%= (employeeData[0].record_count / data.length * 100).toFixed(1) %>">
						<div class="gauge">
						   <div class="gauge-inner"></div>
						   <div class="gauge-spinner alt"></div>
					    </div>
					    <div class="pointer"></div>
					    <div class="gauge-range">
						   <div class="gauge-min"></div>
						   <div class="gauge-max"></div>
						   <div class="gauge-value"></div>
					    </div>
					</div>
				 </div>
			
				
			
		</main>
		<main>
			<div id="data-container2" class="hidden">

				<div class="search-container">
				  <input
				    type="text"
				    class="search-box"
				    id="searchBox"
				    placeholder="Search for Employees.."
				    onkeyup="searchEmployees()"
				  />
				  <button onclick="openPopup()" class="btn">Add</button>
				 

				  
				<div class="popup" id="popup">
				  <div class="popup-content">
					 <h3>Enter Employee Details</h3>
					 <form action="/setLeadname" method="post">
						<label for="empid">EmpID:</label>
						<input type="text" name="empid" id="empid" required>
					 
			 
						<br>
						<button type="submit">Submit</button>
					 </form>
					 <button onclick="closePopup()">Close</button>
				  </div>
			   </div>
			 
			   <div class="popup2" id="popup2">
				<div class="popup-content2">
				  <h3>Remove Employee Lead Name</h3>
				  <form action="/setLeadname" method="post">
				    <label for="empid">EmpID:</label>
				    <input type="text" name="empid" id="empid" required>
				    <br>
				    <button type="submit">Remove</button>
				  </form>
				  <button onclick="closePopup2()">Close</button>
				</div>
			   </div>
			 
			 
			   <button onclick="openPopup2()" class="btn">REMOVE</button>
				    <button onclick="window.location.href='login'" class="btn" style="width: 200px;">LOGOUT</button>
				</div>
			 
				<div id="content-to-print">

				<div class="container">
				  <% data.forEach(function(employee) { %>
				  <div
				    class="employee-box <%= getBorderClass(employee.interaction, employee.leadinteraction) %>"
				    id="employee-box-<%= employee.empid %>"
				  >
				    <p><strong>EmpID:</strong> <%= employee.empid %></p>
				    <p>
					 <strong>Name:</strong> <%= employee.firstname %> <%= employee.lastname%>
				    </p>
				    <p><strong>Email:</strong> <%= employee.email %></p>
				    <p><strong>LeadMail:</strong> <%= employee.leademail %></p>
				    <p><strong>ManagerMail:</strong> <%= employee.manageremail %></p>
				    <div class="button">
					
					 <button
					   class="interaction-button"
					   data-empid="<%= employee.empid %>"
					   data-interaction="yes"
					   onClick="window.location.reload();"
					   style="
						font-weight: 700;
						background-color: rgb(0, 171, 31);
						color: white;
						border: none;
						padding: 10px 10px;
						border-radius: 5px;
						cursor: pointer;
					   "
					 >
					   Yes
					 </button>
					 <button
					   class="interaction-button"
					   data-empid="<%= employee.empid %>"
					   data-interaction="no"
					   onClick="window.location.reload();"
					   style="
						font-weight: 700;
						background-color: rgb(226, 0, 0);
						color: white;
						border: none;
						padding: 10px 10px;
						border-radius: 5px;
						cursor: pointer;
					   "
					 >
					   No  
					 </button>
					 
					 
			 
					 <button
					   onclick="showDetails('<%= JSON.stringify(employee) %>')"
					   style="
						background-color: #0078d4;
						color: white;
						border: none;
						padding: 10px 10px;
						border-radius: 5px;
						cursor: pointer;
					   "
					 >
					   View Details
					 </button>
				    </div>
				  </div>
				  <% }); %>

				</div>
			 				</div>

				<div class="details-modal" id="detailsModal">
				  <div class="details-modal-content">
				    <span onclick="closeDetails()" style="cursor: pointer; float: right; font-size: 40px; margin-right: 10px; color: rgb(55, 0, 157);border-radius: 20px;width: 20px; font-weight: 900;font-family: ;">&times;</span>
			 
				    <div id="detailsContent"></div>
				    <button
					 onclick="closeDetails()"
					 style="
					   background-color: #0078d4;
					   color: white;
					   border: none;
					   padding: 10px 20px;
					   border-radius: 5px;
					   cursor: pointer;
					 "
				    >
					 OK
				    </button>
				    <!-- Details will be displayed here -->
				  </div>
				  <br><br><br>
				</div>
			 
			</div>
		</main>

		<!-- MAIN -->
	</section>
	<!-- CONTENT -->

	<script>

		// Example: Yes button click event
const yesButton = document.querySelector('.interaction-button[data-interaction="yes"]');

// Add a click event listener
yesButton.addEventListener('click', function () {
  console.log('Yes button clicked');
});


	const allSideMenu = document.querySelectorAll('#sidebar .side-menu.top li a');

allSideMenu.forEach(item=> {
	const li = item.parentElement;

	item.addEventListener('click', function () {
		allSideMenu.forEach(i=> {
			i.parentElement.classList.remove('active');
		})
		li.classList.add('active');
	})
});


logout.addEventListener('click', function () {
	window.location.href = 'login';
})




// TOGGLE SIDEBAR
const menuBar = document.querySelector('#content nav .bx.bx-menu');
const sidebar = document.getElementById('sidebar');

menuBar.addEventListener('click', function () {
	sidebar.classList.toggle('hide');
})

// -----------------------------

const searchButton = document.querySelector('#content nav form .form-input button');
const searchButtonIcon = document.querySelector('#content nav form .form-input button .bx');
const searchForm = document.querySelector('#content nav form');
const searchInput = document.querySelector('#search-empid'); // Add this line to get the input field

searchButton.addEventListener('click', function (e) {
  if (window.innerWidth < 576) {
    e.preventDefault();
    searchForm.classList.toggle('show');
    if (searchForm.classList.contains('show')) {
      searchButtonIcon.classList.replace('bx-search', 'bx-x');
    } else {
      searchButtonIcon.classList.replace('bx-x', 'bx-search');
    }
  } else {
    // Handle the search functionality
    const searchTerm = searchInput.value.trim();
    if (searchTerm !== '') {
      // Use searchTerm to filter the table rows and display only matching rows
      filterTableByEmpid(searchTerm);
    }
  }
});

function filterTableByEmpid(empid) {
  // Replace 'your-table-id' with the actual ID of your table
  const table = document.getElementById('your-table-id');
  const rows = table.getElementsByTagName('tr');
  
  for (let i = 1; i < rows.length; i++) { // Start from 1 to skip the table header row
    const cell = rows[i].getElementsByTagName('td')[3]; // Assuming empid is in the 4th column (index 3)
    if (cell) {
      const cellText = cell.textContent || cell.innerText;
      if (cellText.includes(empid)) {
        rows[i].style.display = '';
      } else {
        rows[i].style.display = 'none';
      }
    }
  }
}

// -----------------------------------






if(window.innerWidth < 768) {
	sidebar.classList.add('hide');
} else if(window.innerWidth > 576) {
	searchButtonIcon.classList.replace('bx-x', 'bx-search');
	searchForm.classList.remove('show');
}


window.addEventListener('resize', function () {
	if(this.innerWidth > 576) {
		searchButtonIcon.classList.replace('bx-x', 'bx-search');
		searchForm.classList.remove('show');
	}
})



const switchMode = document.getElementById('switch-mode');

switchMode.addEventListener('change', function () {
	if(this.checked) {
		document.body.classList.add('dark');
	} else {
		document.body.classList.remove('dark');
	}
})

$(document).ready(function () {
	var gaugeObj = $('#gauge1'),
	    gaugeMin = gaugeObj.data('min'),
	    gaugeMax = gaugeObj.data('max'),
	    gaugeValue = gaugeObj.data('value');
	setRangeText(gaugeObj);
	setGauge(gaugeObj, gaugeMin, gaugeMax, gaugeValue);
 
 
	function setRangeText(gaugeObj) {
	    gaugeObj.find('.gauge-min').text(gaugeMin);
	    gaugeObj.find('.gauge-max').text(gaugeMax);
	    gaugeObj.find('.gauge-value').text(gaugeValue);
	}
 
 
	function setGauge(gaugeObj, gaugeMin, gaugeMax, gaugeValue) {
	    var percentage = (gaugeValue / gaugeMax),
		   degrees = 180 * percentage,
		   pointerDegrees = degrees - 90,
		   spinner = gaugeObj.find('.gauge-spinner'),
		   pointer = gaugeObj.find('.pointer');
 
 
	    spinner.css('transform', 'rotate(' + degrees + 'deg)');
	    pointer.css('transform', 'rotate(' + pointerDegrees + 'deg)');
	}
 
 
 });




 fetch('/data')
    .then(response => response.json())
    .then(data => {
      const dataContainer = document.getElementById('data-container');
	 const employeeData = data[0].employeeData; // Assuming employeeData is in the first record
	 const userEmail2 = userEmail; // Get the email
      const employeeDataContainer = document.getElementById('employee-data-container');
      employeeDataContainer.innerHTML = `Employee Data: ${employeeData}`;

      // Iterate through the data and display it in the HTML
      data.forEach(record => {
        const recordHTML = document.createElement('div');
        recordHTML.innerHTML = `<p>ID: ${record.id}</p>
                               <p>Firstname: ${record.firstname}</p>
                               <p>Lastname: ${record.lastname}</p>
                               <p>Email: ${record.email}</p>
                               <p>Interaction Time: ${record.interaction_time}</p>
						 <p>Interaction Date: ${record.interaction_date}</p>
						 <p>Lead Interaction: ${record.leadinteraction}</p>
						 <p>Lead Email: ${record.leademail}</p>
						 <p>Manager Email: ${record.manageremail}</p>
						 <p>Empid: ${record.empid}</p>
						 <p>Lead Name: ${record.leadname}</p>
						 <p>Manager Name: ${record.managername}</p>

                               <!-- Add more fields as needed -->`;
        dataContainer.appendChild(recordHTML);
      });

      // Access and display employeeData
      
    })
    .catch(error => {
      console.error('Error fetching data:', error);
    });

    document.addEventListener("DOMContentLoaded", function () {
  const interactionButtons = document.querySelectorAll(".interaction-button");

  interactionButtons.forEach((button) => {
    button.addEventListener("click", function () {
	
      const empid = button.getAttribute("data-empid");
      const interaction = button.getAttribute("data-interaction");

      // Debugging: Check the values before sending the fetch request
      console.log("Sending empid:", empid);
      console.log("Sending interaction:", interaction);

      // Create an object to send in the request body
      const data = {
        empid: empid,
        interaction: interaction,
      };

      // Debugging: Check the data object
      console.log("Sending data:", data);

      fetch('/updateInteraction', {
        method: "POST",
        headers: {
          "Content-Type": "application/json", // Set the content type to JSON
        },
        body: JSON.stringify(data), // Convert the data to JSON
      })
        .then((response) => response.json())
        .then((data) => {
          console.log('Response data:', data);

          if (data.success) {
            const employeeBox = document.getElementById(`employee-box-${empid}`);
            button.disabled = true;
            button.style.backgroundColor = "#999";
          }
        })
        .catch((error) => {
          console.error("Error updating interaction:", error);
        });
    });
  });
});


    document.addEventListener('DOMContentLoaded', function () {
    const createButton = document.getElementById('createButton');
    const createSection = document.getElementById('data-container');

    const createButton2 = document.getElementById('createButton2');
    const createSection2 = document.getElementById('data-container2');


    createButton.addEventListener('click', function () {
        toggleVisibility(createSection);
    });

    createButton2.addEventListener('click', function () {
	   toggleVisibility(createSection2);
	   toggleVisibility(createSection);

    });

    function toggleVisibility(section) {
        if (section.classList.contains('hidden')) {
            section.classList.remove('hidden');
        } else {
            section.classList.add('hidden');
        }
    }
}

	
);
toggleVisibility(createSection2);
    function toggleVisibility(section) {
	   if (section.classList.contains('hidden')) {
		  section.classList.remove('hidden');
	   } else {
		  section.classList.add('hidden');
	   }
    }

    function downloadasexcel() {
	   window.location.href = "/downloadasexcel";
    }
    





      function searchEmployees() {
        var input, filter, employeeBoxes, i, txtValue;
        input = document.getElementById("searchBox");
        filter = input.value.toUpperCase();
        employeeBoxes = document.querySelectorAll(".employee-box");

        employeeBoxes.forEach(function (box) {
          var paragraphs = box.querySelectorAll("p");
          var found = false;

          paragraphs.forEach(function (p) {
            txtValue = p.textContent || p.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
              found = true;
            }
          });

          if (found) {
            box.style.display = "block";
          } else {
            box.style.display = "none";
          }
        });
      }
      function showDetails(details) {
        var modal = document.getElementById("detailsModal");
        var modalContent = document.getElementById("detailsContent");
        modalContent.innerHTML = "<h2>Details</h2>";
        var employee = JSON.parse(details);
        var excludedFields = ["password", "confirmpass"];

        function formatFieldName(fieldName) {
          return fieldName.replace(/_/g, " ").replace(/\w\S*/g, function (txt) {
            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
          });
        }

        for (var key in employee) {
          if (excludedFields.includes(key)) {
            continue;
          }

          if (key === "interaction") {
            if (employee[key] === "yes") {
              modalContent.innerHTML += `<p><span style="width: 150px; display: inline-block;"><strong>${formatFieldName(
                key
              )}:</strong></span> <span style="color: green;">${
                employee[key]
              }</span></p>`;
            } else if (employee[key] === "no") {
              modalContent.innerHTML += `<p><span style="width: 150px; display: inline-block;"><strong>${formatFieldName(
                key
              )}:</strong></span> <span style="color: red;">Not Interacted</span></p>`;
            } else {
              modalContent.innerHTML += `<p><span style="width: 150px; display: inline-block;"><strong>${formatFieldName(
                key
              )}:</strong></span> <span style="color: black;">Not available</span></p>`;
            }
          } else {
            modalContent.innerHTML += `<p><span style="width: 150px; display: inline-block;"><strong>${formatFieldName(
              key
            )}:</strong></span> ${employee[key] || "Not available"}</p>`;
          }
        }
        modal.style.display = "block";
      }
      function closeDetails() {
        var modal = document.getElementById("detailsModal");
        modal.style.display = "none";
      }

        function addemp() {
            window.location.href = "registration";
        }


        function openPopup() {
            document.getElementById("popup").style.display = "block";
        }

        function closePopup() {
            document.getElementById("popup").style.display = "none";
        }

        function openPopup2() {
          const popup2 = document.getElementById('popup2');
    popup2.style.display = 'block';
        }

        function closePopup2() {
            document.getElementById("popup2").style.display = "none";
        }
    
    const params = new URLSearchParams(window.location.search);
    const userEmail = params.get('email');
    // Display the email on the page
    document.getElementById('userEmail').textContent = userEmail;

    document.getElementById('print-button').addEventListener('click', function() {
  const contentToPrint = document.getElementById('content-to-print');

  // Create a new window for printing
  const printWindow = window.open('', '', 'width=600,height=600');

  // Write the content to the new window
  printWindow.document.open();
  printWindow.document.write('<html><head><title>Print</title></head><body>');
  printWindow.document.write(contentToPrint.innerHTML);
  printWindow.document.write('</body></html>');
  printWindow.document.close();

  // Wait for the content to load, then print
  printWindow.onload = function() {
    printWindow.print();
    printWindow.close();
  };
});


</script>
</body>
</html>
